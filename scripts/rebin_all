#!/usr/bin/env python
'''
Rebin all mac or mythen files in a directory or several
'''

import os, re
from rebin import maincmd

DELTAS = [2, 3, 5]
mac_reg = 'mac.*\.dat'
scan_reg = '(\/|^)\d{6,}.dat'

def run_rebin(files, angle='0', delta=[0.1], rebin=True, sum=False, mythen=None):
    args = ['-a', angle, '-p']
    if mythen: args.append('-m')
    if rebin: args.append('-r')
    if not sum: args.append('+s')
    for d in delta:
        args.extend(['-d', str(d)])
    args.extend(files)

    maincmd.main(args)

def _re_find(reg, files):
    return [f for f in files if re.search(reg, f)]

def mac_find(files): return _re_find(mac_reg, files)
def mythen_find(files): return _re_find(scan_reg, files)

def _listdir(dir):
    return [os.path.join(dir, file) for file in os.listdir(dir)]

def main(args=None):
    from argparse import ArgumentParser
    parser = ArgumentParser(usage= '%(prog)s -mac|-mythen [-r] directory',
                            description= 'Process all mac or mythen files in a directory or several')
    parser.add_argument('-r', action='store_true', default=False, dest='recursive', help='Look through subdirectories for files to process')
    parser.add_argument('-mac', action='store_true', default=False, help='Look for mac data to process')
    parser.add_argument('-mythen', action='store_true', default=False, help='Look for mythen data to process')
    parser.add_argument('directories', nargs='+')
    args = parser.parse_args(args)

    ndirs = args.directories[:]
    if args.recursive: 
        for dir in args.directories:
            ndirs.extend([x[0] for x in os.walk(dir)])

    ndirs = set(ndirs)
    for dir in ndirs:
        if args.mac:
            run_rebin(mac_find(_listdir(dir)), delta=DELTAS, rebin=True, sum=False)
        if args.mythen:
            run_rebin(mythen_find(_listdir(dir)), delta=DELTAS, rebin=True, sum=True, mythen=True)

if __name__=='__main__':
    main()
